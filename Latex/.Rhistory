y = "Leverage",
title = "") # labels
a
b<- ggplot(data_webs , aes(y = leverage , x = residuals )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Residuales",
y = "Leverage",
title = "") # labels
b
# Arrange the ggplot2 plots side by side using grid.arrange()
grid.arrange(a, b, ncol = 2)
}
#Calcula el apalancamiento medio
p <- mean(data_webs$leverage)
p
#punto de corte
cutt <- 3*p
cutt
#dejar las observaciones que se consideran influyentes
data_webs2 <- data_webs %>%
filter(leverage <= cutt)
#---- Correr nuevamente el modelo -------#
#Modelo de prueba 2
n_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n_model_Age_wage_cont1)
stargazer(n_model_Age_wage_cont1, type = "text") # Modelo con controles
data_webs2 <- data_webs2 %>%
ungroup() %>%
mutate(residuals2 = residuals(n_model_Age_wage_cont1))
length(residuals(n_model_Age_wage_cont1))
#4. Analisis de valores atipicos del modelo-----------------------------------
#Grafica residuos del modelo
residuos <- ggplot(data = data_webs2,
mapping = aes(x=residuals2)) +
theme_bw() +
geom_density()
png("residuos_sin_var_influy") # Formato grafica
residuos
dev.off() # Cierra la grafica
##Residuo estudentizado
data_webs2 <-data_webs2 %>% mutate(m1_std_residuals2= studres(n_model_Age_wage_cont1))
n_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n_model_Age_wage_cont1)
stargazer(n_model_Age_wage_cont1, type = "text") # Modelo con controles
data_webs2 <- data_webs2 %>%
ungroup() %>%
mutate(residuals2 = residuals(n_model_Age_wage_cont1))
length(residuals(n_model_Age_wage_cont1))
residuos <- ggplot(data = data_webs2,
mapping = aes(x=residuals2)) +
theme_bw() +
geom_density()
residuos
residuos <- ggplot(data = data_webs2,
mapping = aes(x=residuals2)) +
theme_bw() +
geom_density()
png("residuos_sin_var_influy") # Formato grafica
residuos
dev.off() # Cierra la grafica
data_webs2 <-data_webs2 %>% mutate(m1_std_residuals2= studres(n_model_Age_wage_cont1))
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 1 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto
# 2: Correr cada uno de los scripts utilizados en la resoluci?n del problem set 1.
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importaci?n y exportaci?n sencilla de datos
tidyverse,        # Colecci?n de paquetes para datos ordenados y gr?ficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizaci?n de datos faltantes
corrplot,         # Gr?ficos de matrices de correlaci?n
stargazer,        # Generaci?n de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicaci?n de m?todos de remuestreo (bootstrapping)
patchwork,        # Combinaci?n y organizaci?n de gr?ficos
gridExtra,        # Disposici?n de gr?ficos en cuadr?cula
ggplot2,          # Creaci?n de gr?ficos mediante gram?tica de gr?ficos
caret,            # Evaluaci?n y entrenamiento de modelos predictivos
visdat,           # Visualizar missings
patchwork,        # Diseño de graficos
data.table,       # Manipulaci?n eficiente de grandes conjuntos de datos
MASS)             # For post regression calculations
getwd() #Mirar directorio
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("HP", getwd()),
wd <- "C:/Users/HP/OneDrive - Universidad Nacional de Colombia/Documentos/Diego/PEG/2024-2/Machine learning/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("JULIETH", getwd()), #Juliet1
wd <- "C:/Users/JULIETH/Documents/GitHub/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("Usuario", getwd()), #Juliet2
wd <-"C:/Users/Usuario/OneDrive - Universidad de los andes/Documentos/GitHub/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("C:/Users/User", getwd()),
wd <- "C:/Users/User/OneDrive - Universidad de los Andes/Big Data y Machine Learning/Problem_set_1/Problem_set_1",
ifelse(grepl("/Users/aleja/", getwd()),
wd <- "Directorio",
ifelse(grepl("Steven Ramirez", getwd()),
wd <- "C:/Users/Steven Ramirez/OneDrive - Universidad de los Andes/Grupo - Econometría 1/Escritorio/Big Data/Problem-Set-1_Machine-Learning_2024",
wd <- "otro_directorio"))))))
# Author: Juliet Molano
#------------------------------------------------------------------------------#
#--------------Script 4. MODELO DE INGRESO - EDAD  ----------------------------#
#------------------------------------------------------------------------------#
setwd(paste0(wd,"/Base_Datos"))
data_webs <- import(file = "base_final.rds")
# 1. Grafica de correlacion entre ingreso y edad ------------------------------
summary(data_webs$Ingreso_hora_imp) #imputado con valores atipicos
summary(data_webs$Ingreso_hora_imp2) #imputado SIN valores atipicos
scatter_plot <- ggplot(data = data_webs, aes(x = Edad, y = log_ing_h_imp2)) +
geom_point(color = "grey") +  # Puntos en azul
labs(title = "",
x = "Edad",
y = "Logaritmo del ingreso por hora") +
theme_minimal()
png("Caja_sexo.png") # Formato grafica
scatter_plot
dev.off() # Cierra la grafica
#2. Definir los posibles predictores de la base de datos----------------------
#i. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (sin controles)
model_Age_wage <- lm(log_ing_h_imp2 ~ Edad + Edad2, data = data_webs) #Realizamos la regresión
summary(model_Age_wage)
stargazer(model_Age_wage, type = "text") # Modelo simple
#ii. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (con controles)
model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs) #Realizamos la regresión
summary(model_Age_wage_cont1)
stargazer(model_Age_wage_cont1, type = "text") # Modelo con controles
# Generar tablas de regresion
setwd(paste0(wd,"/Latex"))
stargazer(model_Age_wage, type = "text", keep = c("Edad", "Edad2") ) #Modelo completo
stargazer(model_Age_wage, model_Age_wage_cont1,
keep = c("Edad", "Edad2"),
dep.var.caption  = "Logaritmo del salario",
column.labels   = c("Sin controles", "Con controles"),
covariate.labels = c("Edad", "Edad al cuadrado"),
type="latex",out = "modelos_edad_ingresos.tex")
# Leer el contenido del archivo
regression_table <- readLines("modelos_edad_ingresos.tex")
regression_table <- gsub("Observations", "Observaciones", regression_table) #Reemplazar "Observations" con "Observaciones"
regression_table <- gsub("Adjusted R$^{2}$ ", "R$^{2}$ ajustado", regression_table)
writeLines(regression_table, "modelos_edad_ingresos.tex") #Escribir el contenido modificado de nuevo al archivo
#3. Analisis de variables influyentes ----------------------------------------
## leverage
data_webs <- data_webs %>%
ungroup() %>%
mutate(leverage = hatvalues(model_Age_wage_cont1))  # Calcula los valores leverage
length(hatvalues(model_Age_wage_cont1))
## residuals
data_webs <- data_webs %>%
ungroup() %>%
mutate(residuals = residuals(model_Age_wage_cont1))
length(residuals(model_Age_wage_cont1))
{
N <- nrow(data_webs)
data_webs$id <- seq(1 , N)
a<- ggplot(data_webs , aes(y = leverage , x = id , color= Edad , shape= as.factor(Sexo) )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Observaciones",
y = "Leverage",
title = "") # labels
a
b<- ggplot(data_webs , aes(y = leverage , x = residuals )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Residuales",
y = "Leverage",
title = "") # labels
b
# Arrange the ggplot2 plots side by side using grid.arrange()
grid.arrange(a, b, ncol = 2)
}
#Calcula el apalancamiento medio
p <- mean(data_webs$leverage)
p
#punto de corte
cutt <- 3*p
cutt
#dejar las observaciones que se consideran influyentes
data_webs2 <- data_webs %>%
filter(leverage <= cutt)
#---- Correr nuevamente el modelo -------#
#Modelo de prueba 2
n_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n_model_Age_wage_cont1)
stargazer(n_model_Age_wage_cont1, type = "text") # Modelo con controles
data_webs2 <- data_webs2 %>%
ungroup() %>%
mutate(residuals2 = residuals(n_model_Age_wage_cont1))
length(residuals(n_model_Age_wage_cont1))
residuos <- ggplot(data = data_webs2,
mapping = aes(x=residuals2)) +
theme_bw() +
geom_density()
png("residuos_sin_var_influy") # Formato grafica
residuos
dev.off() # Cierra la grafica
data_webs2 <-data_webs2 %>% mutate(m1_std_residuals2 = studres(n_model_Age_wage_cont1))
ggplot(data_webs2 , aes(y = m1_std_residuals2 , x = id , color= Edad, shape= as.factor(Sexo) )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Observaciones",
y = "Residuos",
title = "") # labels
data_webs2 <- data_webs2 %>% filter(m1_std_residuals2<2 & m1_std_residuals2>-2 )
# Correr nuevo the model
n2_model_Age_wage_cont1 <- lm(log_ing_h_imp ~ Edad + Edad2 + Sexo + Tamaño_empresa + formal + Independiente + oficio_factor + edu_factor + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n2_model_Age_wage_cont1)
stargazer(n2_model_Age_wage_cont1, type = "text") # Modelo con controles
matrix_coef <- summary(model_Age_wage)$coefficients
matrix_coef
coeficiente_edad<-my_estimates <- matrix_coef[2, 1]
coeficiente_edad2<-my_estimates <- matrix_coef[3, 1]
coeficiente_edad2
edad_peak<-(-coeficiente_edad/(2*coeficiente_edad2))
edad_peak
## FORMA 2##
Peak_age_fun <- function(age_1, age_2) {
Edad_P<- -(age_1/(2*age_2))
return (Edad_P)
Peak_age_mod_simple <- Peak_age_fun(age_1 = model_Age_wage$coefficients[2],age_2 = model_Age_wage$coefficients[3])
Peak_age_mod_simple
matrix_coef <- summary(n2_model_Age_wage_cont1)$coefficients
matrix_coef
coeficiente_edad_c<-my_estimates <- matrix_coef[2, 1]
coeficiente_edad_c2<-my_estimates <- matrix_coef[3, 1]
coeficiente_edad_c2
#Aplico la fórmula para obtener el "peak" de la edad
edad_peak_C<-(-coeficiente_edad_c/(2*coeficiente_edad_c2))
edad_peak_C
matrix_coef <- summary(model_Age_wage)$coefficients
matrix_coef
coeficiente_edad<-my_estimates <- matrix_coef[2, 1]
coeficiente_edad2<-my_estimates <- matrix_coef[3, 1]
coeficiente_edad2
#Aplico la fórmula para obtener el "peak" de la edad
edad_peak<-(-coeficiente_edad/(2*coeficiente_edad2))
edad_peak
# Author: Juliet Molano
#------------------------------------------------------------------------------#
#--------------Script 4. MODELO DE INGRESO - EDAD  ----------------------------#
#------------------------------------------------------------------------------#
setwd(paste0(wd,"/Base_Datos"))
data_webs <- import(file = "base_final.rds")
# 1. Grafica de correlacion entre ingreso y edad ------------------------------
summary(data_webs$Ingreso_hora_imp) #imputado con valores atipicos
summary(data_webs$Ingreso_hora_imp2) #imputado SIN valores atipicos
scatter_plot <- ggplot(data = data_webs, aes(x = Edad, y = log_ing_h_imp2)) +
geom_point(color = "grey") +  # Puntos en azul
labs(title = "",
x = "Edad",
y = "Logaritmo del ingreso por hora") +
theme_minimal()
png("Caja_sexo.png") # Formato grafica
scatter_plot
dev.off() # Cierra la grafica
#2. Definir los posibles predictores de la base de datos----------------------
#i. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (sin controles)
model_Age_wage <- lm(log_ing_h_imp2 ~ Edad + Edad2, data = data_webs) #Realizamos la regresión
summary(model_Age_wage)
stargazer(model_Age_wage, type = "text") # Modelo simple
#ii. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (con controles)
model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs) #Realizamos la regresión
summary(model_Age_wage_cont1)
stargazer(model_Age_wage_cont1, type = "text") # Modelo con controles
# Generar tablas de regresion
setwd(paste0(wd,"/Latex"))
stargazer(model_Age_wage, type = "text", keep = c("Edad", "Edad2") ) #Modelo completo
stargazer(model_Age_wage, model_Age_wage_cont1,
keep = c("Edad", "Edad2"),
dep.var.caption  = "Logaritmo del salario",
column.labels   = c("Sin controles", "Con controles"),
covariate.labels = c("Edad", "Edad al cuadrado"),
type="latex",out = "modelos_edad_ingresos.tex")
# Leer el contenido del archivo
regression_table <- readLines("modelos_edad_ingresos.tex")
regression_table <- gsub("Observations", "Observaciones", regression_table) #Reemplazar "Observations" con "Observaciones"
regression_table <- gsub("Adjusted R$^{2}$ ", "R$^{2}$ ajustado", regression_table)
writeLines(regression_table, "modelos_edad_ingresos.tex") #Escribir el contenido modificado de nuevo al archivo
#3. Analisis de variables influyentes ----------------------------------------
## leverage
data_webs <- data_webs %>%
ungroup() %>%
mutate(leverage = hatvalues(model_Age_wage_cont1))  # Calcula los valores leverage
length(hatvalues(model_Age_wage_cont1))
## residuals
data_webs <- data_webs %>%
ungroup() %>%
mutate(residuals = residuals(model_Age_wage_cont1))
length(residuals(model_Age_wage_cont1))
{
N <- nrow(data_webs)
data_webs$id <- seq(1 , N)
a<- ggplot(data_webs , aes(y = leverage , x = id , color= Edad , shape= as.factor(Sexo) )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Observaciones",
y = "Leverage",
title = "") # labels
a
b<- ggplot(data_webs , aes(y = leverage , x = residuals )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Residuales",
y = "Leverage",
title = "") # labels
b
# Arrange the ggplot2 plots side by side using grid.arrange()
grid.arrange(a, b, ncol = 2)
}
#Calcula el apalancamiento medio
p <- mean(data_webs$leverage)
p
#punto de corte
cutt <- 3*p
cutt
#dejar las observaciones que se consideran influyentes
data_webs2 <- data_webs %>%
filter(leverage <= cutt)
#---- Correr nuevamente el modelo -------#
#Modelo de prueba 2
n_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n_model_Age_wage_cont1)
stargazer(n_model_Age_wage_cont1, type = "text") # Modelo con controles
data_webs2 <- data_webs2 %>%
ungroup() %>%
mutate(residuals2 = residuals(n_model_Age_wage_cont1))
length(residuals(n_model_Age_wage_cont1))
#4. Analisis de valores atipicos del modelo-----------------------------------
#Grafica residuos del modelo
residuos <- ggplot(data = data_webs2,
mapping = aes(x=residuals2)) +
theme_bw() +
geom_density()
png("residuos_sin_var_influy") # Formato grafica
residuos
dev.off() # Cierra la grafica
##Residuo estudentizado
data_webs2 <-data_webs2 %>% mutate(m1_std_residuals2 = studres(n_model_Age_wage_cont1))
ggplot(data_webs2 , aes(y = m1_std_residuals2 , x = id , color= Edad, shape= as.factor(Sexo) )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Observaciones",
y = "Residuos",
title = "") # labels
#Eliminacion de valores atipicos
data_webs2 <- data_webs2 %>% filter(m1_std_residuals2<2 & m1_std_residuals2>-2 )
# Correr nuevo the model
n2_model_Age_wage_cont1 <- lm(log_ing_h_imp ~ Edad + Edad2 + Sexo + Tamaño_empresa + formal + Independiente + oficio_factor + edu_factor + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n2_model_Age_wage_cont1)
stargazer(n2_model_Age_wage_cont1, type = "text") # Modelo con controles
matrix_coef <- summary(model_Age_wage)$coefficients
matrix_coef
coeficiente_edad<-my_estimates <- matrix_coef[2, 1]
coeficiente_edad2<-my_estimates <- matrix_coef[3, 1]
coeficiente_edad2
#i. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (sin controles)
model_Age_wage <- lm(log_ing_h_imp2 ~ Edad + Edad2, data = data_webs) #Realizamos la regresión
summary(model_Age_wage)
stargazer(model_Age_wage, type = "text") # Modelo simple
#Obtener la edad máxima en la que el incremento en el salario empieza a disminuir(SC)
matrix_coef <- summary(model_Age_wage)$coefficients
matrix_coef
coeficiente_edad<-my_estimates <- matrix_coef[2, 1]
coeficiente_edad2<-my_estimates <- matrix_coef[3, 1]
coeficiente_edad2
n2_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
# Author: Juliet Molano
#------------------------------------------------------------------------------#
#--------------Script 4. MODELO DE INGRESO - EDAD  ----------------------------#
#------------------------------------------------------------------------------#
setwd(paste0(wd,"/Base_Datos"))
data_webs <- import(file = "base_final.rds")
# 1. Grafica de correlacion entre ingreso y edad ------------------------------
summary(data_webs$Ingreso_hora_imp) #imputado con valores atipicos
summary(data_webs$Ingreso_hora_imp2) #imputado SIN valores atipicos
scatter_plot <- ggplot(data = data_webs, aes(x = Edad, y = log_ing_h_imp2)) +
geom_point(color = "grey") +  # Puntos en azul
labs(title = "",
x = "Edad",
y = "Logaritmo del ingreso por hora") +
theme_minimal()
png("Caja_sexo.png") # Formato grafica
scatter_plot
dev.off() # Cierra la grafica
#2. Definir los posibles predictores de la base de datos----------------------
#i. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (sin controles)
model_Age_wage <- lm(log_ing_h_imp2 ~ Edad + Edad2, data = data_webs) #Realizamos la regresión
summary(model_Age_wage)
stargazer(model_Age_wage, type = "text") # Modelo simple
#ii. Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (con controles)
model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs) #Realizamos la regresión
summary(model_Age_wage_cont1)
stargazer(model_Age_wage_cont1, type = "text") # Modelo con controles
# Generar tablas de regresion
setwd(paste0(wd,"/Latex"))
stargazer(model_Age_wage, type = "text", keep = c("Edad", "Edad2") ) #Modelo completo
stargazer(model_Age_wage, model_Age_wage_cont1,
keep = c("Edad", "Edad2"),
dep.var.caption  = "Logaritmo del salario",
column.labels   = c("Sin controles", "Con controles"),
covariate.labels = c("Edad", "Edad al cuadrado"),
type="latex",out = "modelos_edad_ingresos.tex")
# Leer el contenido del archivo
regression_table <- readLines("modelos_edad_ingresos.tex")
regression_table <- gsub("Observations", "Observaciones", regression_table) #Reemplazar "Observations" con "Observaciones"
regression_table <- gsub("Adjusted R$^{2}$ ", "R$^{2}$ ajustado", regression_table)
writeLines(regression_table, "modelos_edad_ingresos.tex") #Escribir el contenido modificado de nuevo al archivo
#3. Analisis de variables influyentes ----------------------------------------
## leverage
data_webs <- data_webs %>%
ungroup() %>%
mutate(leverage = hatvalues(model_Age_wage_cont1))  # Calcula los valores leverage
length(hatvalues(model_Age_wage_cont1))
## residuals
data_webs <- data_webs %>%
ungroup() %>%
mutate(residuals = residuals(model_Age_wage_cont1))
length(residuals(model_Age_wage_cont1))
{
N <- nrow(data_webs)
data_webs$id <- seq(1 , N)
a<- ggplot(data_webs , aes(y = leverage , x = id , color= Edad , shape= as.factor(Sexo) )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Observaciones",
y = "Leverage",
title = "") # labels
a
b<- ggplot(data_webs , aes(y = leverage , x = residuals )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Residuales",
y = "Leverage",
title = "") # labels
b
# Arrange the ggplot2 plots side by side using grid.arrange()
grid.arrange(a, b, ncol = 2)
}
#Calcula el apalancamiento medio
p <- mean(data_webs$leverage)
p
#punto de corte
cutt <- 3*p
cutt
#dejar las observaciones que se consideran influyentes
data_webs2 <- data_webs %>%
filter(leverage <= cutt)
#---- Correr nuevamente el modelo -------#
#Modelo de prueba 2
n_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n_model_Age_wage_cont1)
stargazer(n_model_Age_wage_cont1, type = "text") # Modelo con controles
data_webs2 <- data_webs2 %>%
ungroup() %>%
mutate(residuals2 = residuals(n_model_Age_wage_cont1))
length(residuals(n_model_Age_wage_cont1))
#4. Analisis de valores atipicos del modelo-----------------------------------
#Grafica residuos del modelo
residuos <- ggplot(data = data_webs2,
mapping = aes(x=residuals2)) +
theme_bw() +
geom_density()
png("residuos_sin_var_influy") # Formato grafica
residuos
dev.off() # Cierra la grafica
##Residuo estudentizado
data_webs2 <-data_webs2 %>% mutate(m1_std_residuals2 = studres(n_model_Age_wage_cont1))
ggplot(data_webs2 , aes(y = m1_std_residuals2 , x = id , color= Edad, shape= as.factor(Sexo) )) +
geom_point() + # add points
theme_bw() + #black and white theme
labs(x = "Observaciones",
y = "Residuos",
title = "") # labels
data_webs2 <- data_webs2 %>% filter(m1_std_residuals2<2 & m1_std_residuals2>-2 )
data_webs2 <- data_webs2 %>% filter(m1_std_residuals2<2 & m1_std_residuals2>-2 )
n2_model_Age_wage_cont1 <- lm(log_ing_h_imp2 ~ Edad + Edad2 + Sexo + Estrato + dummy_jefe + edu_factor + Tamaño_empresa + formal + Independiente + oficio_factor  + Horas_trabajadas + Experiencia_años, data = data_webs2) #Realizamos la regresión
summary(n2_model_Age_wage_cont1)
stargazer(n2_model_Age_wage_cont1, type = "text") # Modelo con controles
View(n2_model_Age_wage_cont1)
data_webs2 <-data_webs2 %>% mutate(m1_std_residuals2 = studres(n_model_Age_wage_cont1))
data_webs2 <- data_webs2 %>% filter(m1_std_residuals2<2 & m1_std_residuals2>-2 )
## FORMA 2##
Peak_age_fun <- function(age_1, age_2) {
Edad_P<- -(age_1/(2*age_2))
return (Edad_P)
}
Peak_age_mod_simple <- Peak_age_fun(age_1 = model_Age_wage$coefficients[2],age_2 = model_Age_wage$coefficients[3])
Peak_age_mod_simple
#2. MODELO CON CONTROLES
#  FORMA 1
#Obtener la edad máxima en la que el incremento en el salario empieza a disminuir(C)
matrix_coef <- summary(n2_model_Age_wage_cont1)$coefficients
matrix_coef
coeficiente_edad_c<-my_estimates <- matrix_coef[2, 1]
coeficiente_edad_c2<-my_estimates <- matrix_coef[3, 1]
coeficiente_edad_c2
#Aplico la fórmula para obtener el "peak" de la edad
edad_peak_C<-(-coeficiente_edad_c/(2*coeficiente_edad_c2))
edad_peak_C
#  FORMA 2
Peak_age_fun <- function(age_1, age_2) {
Edad_P<- -(age_1/(2*age_2))
return (Edad_P)
}
Peak_age_mod_controles <- Peak_age_fun(age_1 = n2_model_Age_wage_cont1$coefficients[2],age_2 = n2_model_Age_wage_cont1$coefficients[3])
Peak_age_mod_controles
