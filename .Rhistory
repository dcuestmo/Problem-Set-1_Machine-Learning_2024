getwd()
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 1 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto
# 2: Correr cada uno de los scripts utilizados en la resoluci?n del problem set 1.
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importaci?n y exportaci?n sencilla de datos
tidyverse,        # Colecci?n de paquetes para datos ordenados y gr?ficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizaci?n de datos faltantes
corrplot,         # Gr?ficos de matrices de correlaci?n
stargazer,        # Generaci?n de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicaci?n de m?todos de remuestreo (bootstrapping)
ggpubr,           # Extensiones para facilitar la creaci?n de gr?ficos en ggplot2
WVPlots,          # Gr?ficos para an?lisis de variables ponderadas
patchwork,        # Combinaci?n y organizaci?n de gr?ficos
gridExtra,        # Disposici?n de gr?ficos en cuadr?cula
ggplot2,          # Creaci?n de gr?ficos mediante gram?tica de gr?ficos
caret,            # Evaluaci?n y entrenamiento de modelos predictivos
data.table)       # Manipulaci?n eficiente de grandes conjuntos de datos
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("HP", getwd()),
wd <- "C:/Users/HP/OneDrive - Universidad Nacional de Colombia/Documentos/Diego/PEG/2024-2/Machine learning/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("Juliet", getwd()),
wd <- "C:/Users/JULIETH/Documents/GitHub/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("juanp.rodriguez", getwd()),
wd <- "C:/Users/juanp.rodriguez/Documents/GitHub/Problem_set_1",
ifelse(grepl("C:/Users/User", getwd()),
wd <- "C:/Users/User/OneDrive - Universidad de los Andes/Big Data y Machine Learning/Problem_set_1/Problem_set_1",
ifelse(grepl("/Users/aleja/", getwd()),
wd <- "Directorio",
wd <- "otro_directorio")))))
# 2. Script de Web-scraping ----------------------------------------------------
# El script: "01_web_scraping.R". Realiza el proceso de web scraping para conseguir los datos
setwd(paste0(wd,"/scripts"))
# Author: Juliet Molano
#main script
#este código contiene todos los scripts utilizados para el problem set 1
# Prepare workspace
getwd()
#se borra la memoria
rm(list = ls())
#se cargan los paquetes
library(pacman)
p_load(tidyverse , # tidy-data
rio, # read/write data from almost any file format
dtplyr,
rvest,
readr,
rio, # import/export data
skimr, # summary data
visdat, ## visualizing missing data
corrplot, ## Correlation Plots
stargazer,
ggpubr,
gridExtra,
naniar,
MASS,
stats) ## tables/output to TEX.
#Cargar base de datos
data <- import(file = "C:/Users/JULIETH/Desktop/Big data/Bases taller 1/base_final.rds")
names(data)
#Crear variables
data <- data %>% mutate (oficio_factor= as.factor(Profesion))
data <- data %>% mutate (edu_factor= as.factor(Nivel_educ))
names(data)
#####################################
scatter_plot <- ggplot(data = data, aes(x = Edad, y = log_ing_h_imp)) +
geom_point(color = "grey") +  # Puntos en azul
labs(title = "",
x = "Edad",
y = "Logaritmo del Salario por hora") +
theme_minimal()
scatter_plot
# Author: Juliet Molano
#main script
#este código contiene todos los scripts utilizados para el problem set 1
# Prepare workspace
getwd()
#se borra la memoria
rm(list = ls())
#se cargan los paquetes
library(pacman)
p_load(tidyverse , # tidy-data
rio, # read/write data from almost any file format
dtplyr,
rvest,
readr,
rio, # import/export data
skimr, # summary data
visdat, ## visualizing missing data
corrplot, ## Correlation Plots
stargazer,
ggpubr,
gridExtra,
naniar,
MASS,
stats) ## tables/output to TEX.
#Cargar base de datos
data <- import(file = "C:/Users/JULIETH/Desktop/Big data/Bases taller 1/base_final.rds")
names(data)
#Crear variables
data <- data %>% mutate (oficio_factor= as.factor(Profesion))
data <- data %>% mutate (edu_factor= as.factor(Nivel_educ))
names(data)
#####################################
#    GRAFICOS DE DENSIDAD
#####################################
# 1. Grafica de correlacion entre ingreso y edad
scatter_plot <- ggplot(data = data, aes(x = Edad, y = log_ing_h_imp)) +
geom_point(color = "grey") +  # Puntos en azul
labs(title = "",
x = "Edad",
y = "Logaritmo del Salario por hora") +
theme_minimal()
scatter_plot
#2. Definir los posibles predictores de la base de datos:
# Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (sin controles)
model_Age_wage <- lm(log_ing_h_imp ~ Edad + Edad2, data = data) #Realizamos la regresión
summary(model_Age_wage)
stargazer(model_Age_wage, type = "text") # Modelo simple
# Regresión: Log(wage)=b1 + b2(age) + b3(age)^2 + u (con controles)
model_Age_wage_cont <- lm(log_ing_h_imp ~ Edad + Edad2 + Sexo + formal + oficio_factor + edu_factor, Horas_trabajadas, Experiencia, data = data) #Realizamos la regresión
summary(model_Age_wage_cont)
stargazer(model_Age_wage_cont, type = "text") # Modelo con controles
# Generar tablas de regresion
stargazer(model_Age_wage_cont, type = "text", keep = c("Edad", "Edad2") ) #Modelo completo
stargazer(model_Age_wage, model_Age_wage_cont,
keep = c("Edad", "Edad2"),
dep.var.caption  = "Logaritmo del salario",
column.labels   = c("Sin controles", "Con controles"),
covariate.labels = c("Edad", "Edad al cuadrado"),
type="latex",out = "C:/Users/JULIETH/Desktop/Big data/latex/modelos.tex")
# Leer el contenido del archivo
regression_table <- readLines("C:/Users/JULIETH/Desktop/Big data/latex/modelos.tex")
# Reemplazar "Observations" con "Observaciones"
regression_table <- gsub("Observations", "Observaciones", regression_table)
regression_table <- gsub("Adjusted R$^{2}$ ", "R$^{2}$ ajustado", regression_table)
# Escribir el contenido modificado de nuevo al archivo
writeLines(regression_table, "C:/Users/JULIETH/Desktop/Big data/latex/modelos.tex")
data <- data %>%
ungroup() %>%
mutate(leverage = hatvalues(model_Age_wage_cont))  # Calcula los valores leverage
data <- data %>%
ungroup() %>%
mutate(residuals = residuals(model_Age_wage_cont))
ggplot(data= data,
mapping = aes(x=residuals)) +
theme_bw() +
geom_density()
data<-data %>% mutate(m1_std_residuals= studres(model_Age_wage_cont) )
# Author: Juliet Molano
#main script
#este código contiene todos los scripts utilizados para el problem set 1
# Prepare workspace
#se borra la memoria
rm(list = ls())
#se cargan los paquetes
library(pacman)
p_load(tidyverse , # tidy-data
rio, # read/write data from almost any file format
dtplyr,
rvest,
readr,
rio, # import/export data
skimr, # summary data
visdat, ## visualizing missing data
corrplot, ## Correlation Plots
stargazer,
ggpubr,
naniar) ## tables/output to TEX.
#Cargar base de datosl
data_webs = import(file = "C:/Users/JULIETH/Desktop/Big data/Bases taller 1/Tabla_webs.rds")
names(data_webs)
str(data_webs)
summary(data_webs$depto) ## corroborando que sea Bogotá
table(data_webs$ocu) ##La base tiene ocupados y no ocupados
############################################################################
#                 FILTRO DE LA BASE
############################################################################
#Filtrar la base para mayores de 18 años
data_webs <- data_webs %>%
filter(age>=18 & ## Mayores de edad
ocu==1) ## Empleados
nrow(data_webs)#16542 observaciones que cumplen con estas caracteristicas
############################################################################
#                 Seleccionar variables
############################################################################
#Seleccion de las variables de interes
data_webs <- data_webs %>%
select(directorio, secuencia_p, orden,  # variables de referenciación
age, sex, oficio, estrato1, p6050, # variables caracteristicas
regSalud, cotPension, # Seguridad social
relab, cuentaPropia, totalHoursWorked, sizeFirm, # caracteristicas empleo
ingtot, ingtotob, y_salary_m, y_total_m, y_otros_m,  #ingresos
fex_c, # factor de expansión
hoursWorkUsual, formal, informal, y_ingLab_m_ha, y_total_m_ha,
Experiencia=p6426,ingtot, ingtotes,maxEducLevel #Adicionales
)%>%
rename(
Direccion = directorio,
Secuencia = secuencia_p,
Orden = orden,
Edad = age,
Sexo = sex,
Profesion = oficio,
Estrato = estrato1,
Posicion_hogar = p6050,
Regimen_salud = regSalud,
Cotiza_pension = cotPension,
Tipo_ocupacion = relab,
Tipo_empleo = cuentaPropia,
Horas_trabajadas = totalHoursWorked,
Horas_trabajadas_sem =hoursWorkUsual,
Tamaño_empresa = sizeFirm,
Ingreso_Total = ingtot,
Ingreso_observado = ingtotob,
Salario_mensual = y_salary_m,
Ingreso_total = y_total_m,
Ingreso_hora = y_total_m_ha,
Otros_ingresos = y_otros_m,
Nivel_educ = maxEducLevel,
Factor_expansion = fex_c)
# Author: Juliet Molano
#main script
#este código contiene todos los scripts utilizados para el problem set 1
# Prepare workspace
#se borra la memoria
rm(list = ls())
#se cargan los paquetes
library(pacman)
p_load(tidyverse , # tidy-data
rio, # read/write data from almost any file format
dtplyr,
rvest,
readr,
rio, # import/export data
skimr, # summary data
visdat, ## visualizing missing data
corrplot, ## Correlation Plots
stargazer,
ggpubr,
naniar) ## tables/output to TEX.
#Cargar base de datosl
data_webs = import(file = "C:/Users/JULIETH/Desktop/Big data/Bases taller 1/Tabla_webs.rds")
names(data_webs)
str(data_webs)
summary(data_webs$depto) ## corroborando que sea Bogotá
table(data_webs$ocu) ##La base tiene ocupados y no ocupados
#Filtrar la base para mayores de 18 años
data_webs <- data_webs %>%
filter(age>=18 & ## Mayores de edad
ocu==1) ## Empleados
nrow(data_webs)#16542 observaciones que cumplen con estas caracteristicas
#Seleccion de las variables de interes
data_webs <- data_webs %>%
select(directorio, secuencia_p, orden,  # variables de referenciación
age, sex, oficio, estrato1, p6050, # variables caracteristicas
regSalud, cotPension, # Seguridad social
relab, cuentaPropia, totalHoursWorked, sizeFirm, # caracteristicas empleo
ingtot, ingtotob, y_salary_m, y_total_m, y_otros_m,  #ingresos
fex_c, # factor de expansión
hoursWorkUsual, formal, informal, y_ingLab_m_ha, y_total_m_ha,
Experiencia=p6426,ingtot, ingtotes,maxEducLevel #Adicionales
)%>%
rename(
Direccion = directorio,
Secuencia = secuencia_p,
Orden = orden,
Edad = age,
Sexo = sex,
Profesion = oficio,
Estrato = estrato1,
Posicion_hogar = p6050,
Regimen_salud = regSalud,
Cotiza_pension = cotPension,
Tipo_ocupacion = relab,
Tipo_empleo = cuentaPropia,
Horas_trabajadas = totalHoursWorked,
Horas_trabajadas_sem =hoursWorkUsual,
Tamaño_empresa = sizeFirm,
Ingreso_Total = ingtot,
Ingreso_observado = ingtotob,
Salario_mensual = y_salary_m,
Ingreso_total = y_total_m,
Ingreso_hora = y_total_m_ha,
Otros_ingresos = y_otros_m,
Nivel_educ = maxEducLevel,
Factor_expansion = fex_c)
# Author: Juliet Molano
#main script
#este código contiene todos los scripts utilizados para el problem set 1
# Prepare workspace
#se borra la memoria
rm(list = ls())
#se cargan los paquetes
library(pacman)
p_load(tidyverse , # tidy-data
rio, # read/write data from almost any file format
dtplyr,
rvest,
readr,
rio, # import/export data
skimr, # summary data
visdat, ## visualizing missing data
corrplot, ## Correlation Plots
stargazer,
ggpubr,
naniar) ## tables/output to TEX.
#Cargar base de datosl
data_webs = import(file = "C:/Users/JULIETH/Desktop/Big data/Bases taller 1/Tabla_webs.rds")
names(data_webs)
str(data_webs)
summary(data_webs$depto) ## corroborando que sea Bogotá
table(data_webs$ocu) ##La base tiene ocupados y no ocupados
############################################################################
#                 FILTRO DE LA BASE
############################################################################
#Filtrar la base para mayores de 18 años
data_webs <- data_webs %>%
filter(age>=18 & ## Mayores de edad
ocu==1) ## Empleados
nrow(data_webs)#16542 observaciones que cumplen con estas caracteristicas
############################################################################
#                 Seleccionar variables
############################################################################
#Seleccion de las variables de interes
data_webs <- data_webs %>%
select(directorio, secuencia_p, orden,  # variables de referenciación
age, sex, oficio, estrato1, p6050, # variables caracteristicas
regSalud, cotPension, # Seguridad social
relab, cuentaPropia, totalHoursWorked, sizeFirm, # caracteristicas empleo
ingtot, ingtotob, y_salary_m, y_total_m, y_otros_m,  #ingresos
fex_c, # factor de expansión
hoursWorkUsual, formal, informal, y_ingLab_m_ha, y_total_m_ha,
Experiencia=p6426,ingtot, ingtotes,maxEducLevel #Adicionales
)%>%
rename(
Direccion = directorio,
Secuencia = secuencia_p,
Orden = orden,
Edad = age,
Sexo = sex,
Profesion = oficio,
Estrato = estrato1,
Posicion_hogar = p6050,
Regimen_salud = regSalud,
Cotiza_pension = cotPension,
Tipo_ocupacion = relab,
Tipo_empleo = cuentaPropia,
Horas_trabajadas = totalHoursWorked,
Horas_trabajadas_sem =hoursWorkUsual,
Tamaño_empresa = sizeFirm,
Ingreso_Total = ingtot,
Ingreso_observado = ingtotob,
Salario_mensual = y_salary_m,
Ingreso_total = y_total_m,
Ingreso_hora = y_total_m_ha,
Otros_ingresos = y_otros_m,
Nivel_educ = maxEducLevel,
Factor_expansion = fex_c)
#Missings
data_table_missing <- data_webs %>%
select(Direccion, Secuencia, Orden, Edad, Sexo, Profesion, formal,
Estrato, Tipo_empleo, Horas_trabajadas, Tamaño_empresa,
Ingreso_total, Ingreso_hora, Otros_ingresos)
load("C:/Users/JULIETH/Documents/GitHub/Problem-Set-1_Machine-Learning_2024/.RData")
View(data_webs)
