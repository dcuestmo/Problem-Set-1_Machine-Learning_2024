boxwex = 0.5,                          # Ancho de la caja
whisklty = 1,                          # Líneas sólidas en los bigotes
whiskcol = "darkgray",                 # Color de los bigotes
staplewex = 0.6,                       # Ancho de las grapas
outpch = 19,                           # Tipo de símbolo para outliers
outcol = "red",                        # Color de los outliers
cex.axis = 0.8,                        # Tamaño de la fuente para los números del eje
cex.lab = 0.8,                         # Tamaño de la fuente para etiquetas
cex.main = 0.8)                        # Tamaño de la fuente para el título
summary(data_webs$Edad) #Mirar minimos y maximos de edad
box_edad <- boxplot(data_webs$Edad,
main = "",      # Título
ylab = "Edad (años)",                  # Etiqueta eje Y
col = "gray",                          # Color de la caja gris
border = "black",                      # Color del borde negro
notch = TRUE,                          # Agregar muescas para intervalos de confianza
boxwex = 0.5,                          # Ancho de la caja
whisklty = 1,                          # Líneas sólidas en los bigotes
whiskcol = "darkgray",                 # Color de los bigotes
staplewex = 0.6,                       # Ancho de las grapas
outpch = 19,                           # Tipo de símbolo para outliers
outcol = "red",                        # Color de los outliers
ylim = c(0, 100),                      # Escala del eje Y de 0 a 100
cex.axis = 0.8,                        # Tamaño de la fuente para los números del eje
cex.lab = 0.8,                         # Tamaño de la fuente para etiquetas
cex.main = 0.8)                        # Tamaño de la fuente para el título
## Horas trabajadas
summary(data_webs$Experiencia_años) #Mirar minimos y maximos de edad
box_edad <- boxplot(data_webs$Experiencia_años,
main = "",      # Título
ylab = "Años experiencia",                  # Etiqueta eje Y
col = "gray",                          # Color de la caja gris
border = "black",                      # Color del borde negro
notch = TRUE,                          # Agregar muescas para intervalos de confianza
boxwex = 0.5,                          # Ancho de la caja
whisklty = 1,                          # Líneas sólidas en los bigotes
whiskcol = "darkgray",                 # Color de los bigotes
staplewex = 0.6,                       # Ancho de las grapas
outpch = 19,                           # Tipo de símbolo para outliers
outcol = "red",                        # Color de los outliers
cex.axis = 0.8,                        # Tamaño de la fuente para los números del eje
cex.lab = 0.8,                         # Tamaño de la fuente para etiquetas
cex.main = 0.8)                        # Tamaño de la fuente para el título
data_webs$Experiencia_años <- mutate(data_webs$Experiencia/12)
data_webs$Experiencia_años <- mutate(data_webs$Experiencia/12)
data_webs$Experiencia_años <- mutate(data_webs$Experiencia/12)
data_webs <- data_webs %>%
mutate(Experiencia_años = Experiencia/12)
setwd(paste0(wd,"/Base_Datos"))
export(data_webs, "/base_final.rds")
export(data_webs, "base_final.rds")
data_webs %>%
group_by(Sexo) %>%
summarise(mean(Edad, na.rm = TRUE))
box_edad
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 1 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto
# 2: Correr cada uno de los scripts utilizados en la resoluci?n del problem set 1.
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importaci?n y exportaci?n sencilla de datos
tidyverse,        # Colecci?n de paquetes para datos ordenados y gr?ficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizaci?n de datos faltantes
corrplot,         # Gr?ficos de matrices de correlaci?n
stargazer,        # Generaci?n de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicaci?n de m?todos de remuestreo (bootstrapping)
ggpubr,           # Extensiones para facilitar la creaci?n de gr?ficos en ggplot2
WVPlots,          # Gr?ficos para an?lisis de variables ponderadas
patchwork,        # Combinaci?n y organizaci?n de gr?ficos
gridExtra,        # Disposici?n de gr?ficos en cuadr?cula
ggplot2,          # Creaci?n de gr?ficos mediante gram?tica de gr?ficos
caret,            # Evaluaci?n y entrenamiento de modelos predictivos
visdat,           # Visualizar missings
patchwork,        # Diseño de graficos
data.table)       # Manipulaci?n eficiente de grandes conjuntos de datos
getwd() #Mirar directorio
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("HP", getwd()),
wd <- "C:/Users/HP/OneDrive - Universidad Nacional de Colombia/Documentos/Diego/PEG/2024-2/Machine learning/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("JULIETH", getwd()),
wd <- "C:/Users/JULIETH/Documents/GitHub/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("Jorge", getwd()),
wd <- "C:/Users/juanp.rodriguez/Documents/GitHub/Problem_set_1",
ifelse(grepl("C:/Users/User", getwd()),
wd <- "C:/Users/User/OneDrive - Universidad de los Andes/Big Data y Machine Learning/Problem_set_1/Problem_set_1",
ifelse(grepl("/Users/aleja/", getwd()),
wd <- "Directorio",
wd <- "otro_directorio")))))
# 2. Script de Web-scraping ----------------------------------------------------
# El script: "01_web_scraping.R". Realiza el proceso de web scraping para conseguir los datos
setwd(paste0(wd,"/scripts"))
source("1. Scraping.R")
# El script: "01_web_scraping.R". Realiza el proceso de web scraping para conseguir los datos
setwd(paste0(wd,"/scripts"))
source("2. Filtro Base y selección de variables.R")
setwd(paste0(wd,"/Base_Datos")) #DirectorioS
data_webs = import(file = "Tabla_Final_GEIH.csv")
names(data_webs) #Mirar nombres de las variables
str(data_webs) #Mirar bases de datos
summary(data_webs$depto) ## corroborando que sea Bogotá
table(data_webs$ocu) ##La base tiene ocupados y no ocupados
skim(data_webs) %>% head()
#2. Filtrar la base de datos ---------------------------------------------------
#Filtrar la base para mayores de 18 años
data_webs <- data_webs %>%
filter(age>=18 & ## Mayores de edad
ocu==1) ## Empleados
nrow(data_webs) #16542 observaciones que cumplen con estas caracteristicas
# 3. Seleccion de las variables de interes --------------------------------------
data_webs <- data_webs %>%
select(directorio, secuencia_p, orden,  # variables de referenciación
age, sex, oficio, estrato1, p6050, # variables caracteristicas
regSalud, cotPension, # Seguridad social
relab, cuentaPropia, totalHoursWorked, sizeFirm, # caracteristicas empleo
ingtot, ingtotob, y_salary_m, y_total_m, y_otros_m,  #ingresos
fex_c, # factor de expansión
hoursWorkUsual, formal, informal, y_ingLab_m_ha, y_total_m_ha,
Experiencia=p6426,ingtot, ingtotes,maxEducLevel #Adicionales
)%>%
rename(
Direccion = directorio,
Secuencia = secuencia_p,
Orden = orden,
Edad = age,
Sexo = sex,
Profesion = oficio,
Estrato = estrato1,
Posicion_hogar = p6050,
Regimen_salud = regSalud,
Cotiza_pension = cotPension,
Tipo_ocupacion = relab,
Independiente = cuentaPropia,
Horas_trabajadas = totalHoursWorked,
Horas_trabajadas_sem =hoursWorkUsual,
Tamaño_empresa = sizeFirm,
Salario_mensual = y_salary_m,
Ingreso_total = y_total_m,
Ingreso_hora = y_total_m_ha,
Otros_ingresos = y_otros_m,
Nivel_educ = maxEducLevel,
Factor_expansion = fex_c)
# 4. Analisis de missings ------------------------------------------------------
# i. Missings variables de interes
data_table_missing <- data_webs %>%
select(Direccion, Secuencia, Orden, Edad, Sexo, Profesion, formal,
Estrato, Independiente, Horas_trabajadas, Tamaño_empresa,
Ingreso_total, Ingreso_hora, Otros_ingresos)
## Grafica general
png("grafica_missing.png") # Formato grafica
vis_miss(data_table_missing) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 90, hjust = 1), # Coloca las etiquetas del eje Y en vertical
plot.title = element_text(hjust = 0.5), # Centra el título
plot.subtitle = element_text(hjust = 0.5)) # Centra el subtítulo
dev.off() # Cierra la grafica
#vis_dat(data_table_missing) # Opcion 2
#vis_miss(data_table_missing ,sort_miss = TRUE, cluster = TRUE) # Opcion 3
#ii. Tabla porcentaje de Missing values
db_miss <- skim(data_table_missing) %>% select(skim_variable, n_missing)
Nobs= nrow(data_webs)
db_miss<- db_miss %>% filter(n_missing!= 0)
db_miss<- db_miss %>% mutate(p_missing= n_missing/Nobs) %>% arrange(-n_missing)
db_miss
## Visualizar las 5 variables con mas missings
ggplot(head(db_miss, 5), aes(x = reorder(skim_variable, +p_missing) , y =  p_missing)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
coord_flip() +
labs(title = "N Missing Per Variable", x = "Var Name", y = "Missings") +
theme(axis.text = element_text(size = 5))  # Set size for axis labels
data_webs <- data_webs %>%
select(-Otros_ingresos)
ggplot(head(db_miss, 5), aes(x = reorder(skim_variable, +p_missing) , y =  p_missing)) +
geom_bar(stat = "identity", fill = "blue", color = "black") +
coord_flip() +
labs(title = "N Missing Per Variable", x = "Var Name", y = "Missings") +
theme(axis.text = element_text(size = 5))  # Set size for axis labels
#Imputar el ingreso total por hora teniendo en cuenta el tipo de trabajador (asalariado e independiente) y por oficio
data_webs <- data_webs %>%
group_by(Profesion, Independiente) %>%
mutate(Ingreso_hora_imp = ifelse(is.na(Ingreso_hora), mean(Ingreso_hora, na.rm = TRUE), Ingreso_hora))
summary(data_webs$Ingreso_hora_imp)
#no existe valor promedio para imputar, por tanto se decide eliminar las 2 observaciones.
data_webs <- data_webs %>%
filter(!is.na(Ingreso_hora_imp))
summary(data_webs$Ingreso_hora_imp)
#ii. Imputacion educacion
# calcular la educacion de moda.
mode_edu <- as.numeric(names(sort(table(data_webs$Nivel_educ), decreasing = TRUE)[1]))
### Imputar el valor missing.
data_webs <- data_webs  %>%
mutate(Nivel_educ = ifelse(is.na(Nivel_educ) == TRUE, mode_edu , Nivel_educ))
summary(data_webs$Nivel_educ)
#Crear la variable dummy jefe de hogar
data_webs$dummy_jefe <- ifelse(data_webs$Posicion_hogar == 1, 1, 0)
data_webs <- data_webs %>%
mutate(Experiencia_años = Experiencia/12)
## Salarios por hora imputado - en logaritmo
summary(data_webs$Ingreso_hora_imp) #Mirar minimos y maximos de edad
box_ingr_h <- boxplot(data_webs$Ingreso_hora_imp,
main = "",      # Título
ylab = "log(ingreso por hora)",                  # Etiqueta eje Y
col = "gray",                          # Color de la caja gris
border = "black",                      # Color del borde negro
notch = TRUE,                          # Agregar muescas para intervalos de confianza
boxwex = 0.5,                          # Ancho de la caja
whisklty = 1,                          # Líneas sólidas en los bigotes
whiskcol = "darkgray",                 # Color de los bigotes
staplewex = 0.6,                       # Ancho de las grapas
outpch = 19,                           # Tipo de símbolo para outliers
outcol = "red",                        # Color de los outliers
cex.axis = 0.8,                        # Tamaño de la fuente para los números del eje
cex.lab = 0.8,                         # Tamaño de la fuente para etiquetas
cex.main = 0.8)                        # Tamaño de la fuente para el título
box_ingr_h
setwd(paste0(wd,"/Graficas"))
ggsave("box_ingr_h", plot = box_ingr_h)
box_ingr_h
box_ingr_h <- boxplot(data_webs$Ingreso_hora_imp,
main = "",      # Título
ylab = "log(ingreso por hora)",                  # Etiqueta eje Y
col = "gray",                          # Color de la caja gris
border = "black",                      # Color del borde negro
notch = TRUE,                          # Agregar muescas para intervalos de confianza
boxwex = 0.5,                          # Ancho de la caja
whisklty = 1,                          # Líneas sólidas en los bigotes
whiskcol = "darkgray",                 # Color de los bigotes
staplewex = 0.6,                       # Ancho de las grapas
outpch = 19,                           # Tipo de símbolo para outliers
outcol = "red",                        # Color de los outliers
cex.axis = 0.8,                        # Tamaño de la fuente para los números del eje
cex.lab = 0.8,                         # Tamaño de la fuente para etiquetas
cex.main = 0.8)                        # Tamaño de la fuente para el título
box_ingr_h
data_webs$log_ing_h_imp=log(data_webs$Ingreso_hora_imp) # con valores atipicos
data_webs$log_ing_h_imp2=log(data_webs$Ingreso_hora_imp2) #sin valores atipicos
# calcular la educacion de moda.
mode_edu <- as.numeric(names(sort(table(data_webs$Nivel_educ), decreasing = TRUE)[1]))
### Imputar el valor missing.
data_webs <- data_webs  %>%
mutate(Nivel_educ = ifelse(is.na(Nivel_educ) == TRUE, mode_edu , Nivel_educ))
summary(data_webs$Nivel_educ)
#Crear la variable dummy jefe de hogar
data_webs$dummy_jefe <- ifelse(data_webs$Posicion_hogar == 1, 1, 0)
data_webs <- data_webs %>%
mutate(Experiencia_años = Experiencia/12)
up <- quantile(data_webs$Ingreso_hora_imp, 0.975, na.rm=T)
data_webs <- data_webs %>% mutate(Ingreso_hora_imp2=  ifelse( test=( Ingreso_hora_imp>= up),
yes= up,
no= Ingreso_hora_imp ))
#. Edad
data_webs$log_ing_h_imp=log(data_webs$Ingreso_hora_imp) # con valores atipicos
data_webs$log_ing_h_imp2=log(data_webs$Ingreso_hora_imp2) #sin valores atipicos
data_webs <- data_webs %>%
mutate( #logaritmo del salario por hora imputado
Edad2 = Edad^2, #Edad al cuadrado
Experiencia_años = Experiencia/12)
#Descargar base de datos final
setwd(paste0(wd,"/Base_Datos"))
export(data_webs, "base_final.rds")
setwd(paste0(wd,"/Base_Datos"))
data_webs <- import(file = "base_final.rds")
data_webs <- as.data.frame(data_webs)
names(data_webs)
subset_data <- data_webs[, c("log_ing_h_imp", "Edad",
"Sexo", "dummy_jefe",
"formal", "Horas_trabajadas",
"Experiencia_años", "Independiente")]
cor_matrix <- cor(subset_data, use="complete.obs")
print(cor_matrix)
corrplot(cor_matrix,
method = "color",           # Método "color" para un heatmap
type = "upper",             # Solo mostrar la mitad superior del gráfico
tl.cex = 0.8,               # Tamaño de los labels
tl.col = "black",           # Color de los labels (negro en este caso)
tl.srt = 45,                # Rotar las etiquetas 45 grados
addCoef.col = "black",      # Color de los coeficientes numéricos
number.cex = 0.7)           # Tamaño de los números que muestran los coeficientes
cor_matrix
cor_matrix <- cor(subset_data, use="complete.obs")
print(cor_matrix)
corrplot(cor_matrix,
method = "color",           # Método "color" para un heatmap
type = "upper",             # Solo mostrar la mitad superior del gráfico
tl.cex = 0.8,               # Tamaño de los labels
tl.col = "black",           # Color de los labels (negro en este caso)
tl.srt = 45,                # Rotar las etiquetas 45 grados
addCoef.col = "black",      # Color de los coeficientes numéricos
number.cex = 0.7)           # Tamaño de los números que muestran los coeficientes
cor_matrix
p_load(corrplot)
cor_matrix <- cor(subset_data, use="complete.obs")
print(cor_matrix)
corrplot(cor_matrix,
method = "color",           # Método "color" para un heatmap
type = "upper",             # Solo mostrar la mitad superior del gráfico
tl.cex = 0.8,               # Tamaño de los labels
tl.col = "black",           # Color de los labels (negro en este caso)
tl.srt = 45,                # Rotar las etiquetas 45 grados
addCoef.col = "black",      # Color de los coeficientes numéricos
number.cex = 0.7)           # Tamaño de los números que muestran los coeficientes
cor_matrix
des_vars= c("Ingreso_hora_imp", "Edad",
"Sexo", "formal",
"Horas_trabajadas", "Experiencia_años",
"Independiente", "Jefe")
stargazer(data_webs[des_vars], type = "text")
#i. Ingreso
media_ingreso <- mean(data_webs$Ingreso_hora_imp, na.rm = TRUE)
density_plot_ing <- ggplot(data = data_webs, aes(x = Ingreso_hora_imp)) +
geom_density(fill = "grey", alpha = 0.5) +  # Rellena la curva de densidad
labs(title = "Gráfico de Densidad Ingreso por hora", x = "Ingreso", y = "Densidad") +
geom_vline(aes(xintercept = media_ingreso),
color = "red", linetype = "dashed", size = 1) +
theme_minimal() +
theme(
plot.title = element_text(size = 10, face = "bold")  # Cambia el tamaño y estilo del título
)
density_plot_ing
setwd(paste0(wd,"/Base_Datos"))
data_webs <- import(file = "base_final.rds")
data_webs <- as.data.frame(data_webs)
names(data_webs)
#2. Grafico de correlacion de las variables continuas -------------------------
subset_data <- data_webs[, c("log_ing_h_imp", "Edad",
"Sexo", "dummy_jefe",
"formal", "Horas_trabajadas",
"Experiencia_años", "Independiente")]
#------------------------------------------------------------------------------#
#------------------------ CODIGO BASE - PROBLEM SET 1 -------------------------#
#------------------------------------------------------------------------------#
# El presente codigo permite:
# 1: Cambiar el directorio entre cada uno de los colaboradores del proyecto
# 2: Correr cada uno de los scripts utilizados en la resoluci?n del problem set 1.
# 0. Se borra la memoria y se cargan los paquetes ------------------------------
rm(list = ls())   # Borra la memoria
# Se cargan los paquetes de inter?s
library(pacman)
p_load(rio,              # Importaci?n y exportaci?n sencilla de datos
tidyverse,        # Colecci?n de paquetes para datos ordenados y gr?ficos (incluye ggplot2).
skimr,            # Resumen compacto y descriptivo de datos
visdat,           # Visualizaci?n de datos faltantes
corrplot,         # Gr?ficos de matrices de correlaci?n
stargazer,        # Generaci?n de tablas en formatos de salida como LaTeX, HTML o texto
rvest,            # Herramientas para web scraping
readxl,           # Importar archivos Excel
writexl,          # Exportar archivos Excel
boot,             # Aplicaci?n de m?todos de remuestreo (bootstrapping)
ggpubr,           # Extensiones para facilitar la creaci?n de gr?ficos en ggplot2
WVPlots,          # Gr?ficos para an?lisis de variables ponderadas
patchwork,        # Combinaci?n y organizaci?n de gr?ficos
gridExtra,        # Disposici?n de gr?ficos en cuadr?cula
ggplot2,          # Creaci?n de gr?ficos mediante gram?tica de gr?ficos
caret,            # Evaluaci?n y entrenamiento de modelos predictivos
visdat,           # Visualizar missings
patchwork,        # Diseño de graficos
data.table)       # Manipulaci?n eficiente de grandes conjuntos de datos
getwd() #Mirar directorio
# 1. Definicion del directorio -------------------------------------------------
ifelse(grepl("HP", getwd()),
wd <- "C:/Users/HP/OneDrive - Universidad Nacional de Colombia/Documentos/Diego/PEG/2024-2/Machine learning/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("JULIETH", getwd()),
wd <- "C:/Users/JULIETH/Documents/GitHub/Problem-Set-1_Machine-Learning_2024",
ifelse(grepl("Jorge", getwd()),
wd <- "C:/Users/juanp.rodriguez/Documents/GitHub/Problem_set_1",
ifelse(grepl("C:/Users/User", getwd()),
wd <- "C:/Users/User/OneDrive - Universidad de los Andes/Big Data y Machine Learning/Problem_set_1/Problem_set_1",
ifelse(grepl("/Users/aleja/", getwd()),
wd <- "Directorio",
wd <- "otro_directorio")))))
# El script: "01_web_scraping.R". Realiza el proceso de web scraping para conseguir los datos
setwd(paste0(wd,"/scripts"))
source("1. Scraping.R")
#Visualizamos las primeras observaciones
print(head(tabla_final))
# 2. Se guarda la informacion --------------------------------------------------
# Guardamos la tabla consolidada
setwd(paste0(wd,"/Base_Datos"))
fwrite(tabla_final,"Tabla_Final_GEIH.csv",row.names = FALSE)
export(tabla_final, "Tabla_webs.rds")
#------------------------------------------------------------------------------#
#----------------------------- Script 1. Scraping -----------------------------#
#------------------------------------------------------------------------------#
# El presente codigo carga la informacion de la Gran Encuesta Integrada de Hogares
# (GEIH) del repositorio del docente de la materia Ignacio Sarmiento
# 0. Se define el directorio de extraccion de informacion ----------------------
url <- 'https://ignaciomsarmiento.github.io/GEIH2018_sample/'
browseURL(url)     # Podemos ingresar a la pagina y observar como se encuentra la pagina
vignette("rvest")  # Se carga la explicaci?n de "rvest"
# 1. Extraccion y manejo de la base de datos -----------------------------------
my_html = read_html(url)  # Lectura del enlace
# 1.1. Se extrae la informacion -------------------------------------------------
# Extraemos una lista que contenga el atributo href de cada uno de los nodos <a> de en los elementos <li>
links <- my_html%>%
html_elements("li")%>%
html_nodes("a")%>%
html_attr("href")
print(links)
# Observamos que esta lista contiene solo las extensiones finales y no el link completo. Ademas es necesario
# omitir el primer elemento de la lista correpondiente al index. Por tanto es necesario completar el link
links <- paste0('https://ignaciomsarmiento.github.io/GEIH2018_sample/', links[-1])
# 1.2 Se organiza la informacion en data.frame ---------------------------------
tabla_final <- data.frame()
# link = links[1]
for (link in links) {
#Ahora se extrae la tabla de datos para cada link utilizando el tml referenciado por el div especifico de la tabla
page <- read_html(link)
referencia <- page %>%
html_element("div.col-md-9") %>%
html_element("div") %>%
html_attr("w3-include-html")
url_tabla <- paste0(url, referencia)
chunk <- read_html(url_tabla)%>%
html_elements("table") %>%
html_table()
# Convertimos la tabla a un DataFrame
tabla_chunk <- as.data.frame(chunk)
print(paste("Total de columnas en este chunk:", ncol(tabla_chunk)))
tabla_final <- bind_rows(tabla_final, tabla_chunk)
}
# Observamos que el total de columnas en cada chunk es la misma que la tabla final, por lo cual
# podemos asumir que no hay variables unicas en algun chunk o duplicados debido a la extraccion.
ncol(tabla_final)
#Visualizamos las primeras observaciones
print(head(tabla_final))
# 2. Se guarda la informacion --------------------------------------------------
# Guardamos la tabla consolidada
setwd(paste0(wd,"/Base_Datos"))
fwrite(tabla_final,"Tabla_Final_GEIH.csv",row.names = FALSE)
export(tabla_final, "Tabla_webs.rds")
# 1. Cargar base de datos  -----------------------------------------------------
setwd(paste0(wd,"/Base_Datos")) #DirectorioS
data_webs = import(file = "Tabla_Final_GEIH.csv")
names(data_webs) #Mirar nombres de las variables
str(data_webs) #Mirar bases de datos
summary(data_webs$depto) ## corroborando que sea Bogotá
table(data_webs$ocu) ##La base tiene ocupados y no ocupados
skim(data_webs) %>% head()
# 2. Filtrar la base de datos ---------------------------------------------------
#Filtrar la base para mayores de 18 años
data_webs <- data_webs %>%
filter(age>=18 & ## Mayores de edad
ocu==1) ## Empleados
nrow(data_webs) #16542 observaciones que cumplen con estas caracteristicas
# 3. Seleccion de las variables de interes --------------------------------------
data_webs <- data_webs %>%
select(directorio, secuencia_p, orden,  # variables de referenciación
age, sex, oficio, estrato1, p6050, # variables caracteristicas
regSalud, cotPension, # Seguridad social
relab, cuentaPropia, totalHoursWorked, sizeFirm, # caracteristicas empleo
ingtot, ingtotob, y_salary_m, y_total_m, y_otros_m,  #ingresos
fex_c, # factor de expansión
hoursWorkUsual, formal, informal, y_ingLab_m_ha, y_total_m_ha,
Experiencia=p6426,ingtot, ingtotes,maxEducLevel #Adicionales
)%>%
rename(
Direccion = directorio,
Secuencia = secuencia_p,
Orden = orden,
Edad = age,
Sexo = sex,
Profesion = oficio,
Estrato = estrato1,
Posicion_hogar = p6050,
Regimen_salud = regSalud,
Cotiza_pension = cotPension,
Tipo_ocupacion = relab,
Independiente = cuentaPropia,
Horas_trabajadas = totalHoursWorked,
Horas_trabajadas_sem =hoursWorkUsual,
Tamaño_empresa = sizeFirm,
Salario_mensual = y_salary_m,
Ingreso_total = y_total_m,
Ingreso_hora = y_total_m_ha,
Otros_ingresos = y_otros_m,
Nivel_educ = maxEducLevel,
Factor_expansion = fex_c)
# 4. Analisis de missings ------------------------------------------------------
# i. Missings variables de interes
data_table_missing <- data_webs %>%
select(Direccion, Secuencia, Orden, Edad, Sexo, Profesion, formal,
Estrato, Independiente, Horas_trabajadas, Tamaño_empresa,
Ingreso_total, Ingreso_hora, Otros_ingresos)
setwd(paste0(wd,"/Graficas"))
png("grafica_missing.png") # Formato grafica
vis_miss(data_table_missing) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 90, hjust = 1), # Coloca las etiquetas del eje Y en vertical
plot.title = element_text(hjust = 0.5), # Centra el título
plot.subtitle = element_text(hjust = 0.5)) # Centra el subtítulo
dev.off() # Cierra la grafica
#vis_dat(data_table_missing) # Opcion 2
#vis_miss(data_table_missing ,sort_miss = TRUE, cluster = TRUE) # Opcion 3
vis_miss(data_table_missing) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 90, hjust = 1), # Coloca las etiquetas del eje Y en vertical
plot.title = element_text(hjust = 0.5), # Centra el título
plot.subtitle = element_text(hjust = 0.5)) # Centra el subtítulo
png("grafica_missing.png") # Formato grafica
vis_miss(data_table_missing) +
theme_minimal() +
theme(axis.text.y = element_text(angle = 90, hjust = 1), # Coloca las etiquetas del eje Y en vertical
plot.title = element_text(hjust = 0.5), # Centra el título
plot.subtitle = element_text(hjust = 0.5)) # Centra el subtítulo
